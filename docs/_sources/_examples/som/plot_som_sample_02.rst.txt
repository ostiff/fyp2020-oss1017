
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/som/plot_som_sample_02.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_som_plot_som_sample_02.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_som_plot_som_sample_02.py:


SOM Dimensionality Reduction (II)
=================================

This code is equivalent to :ref:`sphx_glr__examples_som_plot_som_sample_01.py`
but uses the library ``minisom``. Note that the visualisation produced is not as
nice as ``SimpSOM``. Yet this can achieve through ``matplotlib`` or ``seaborn``.

See https://github.com/JustGlowing/minisom/blob/master/examples

.. warning:: ``minisom`` is computationally more efficient than ``SimpSOM``

.. GENERATED FROM PYTHON SOURCE LINES 13-104



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_examples/som/images/sphx_glr_plot_som_sample_02_001.png
          :alt: Nodes Grid w Weights Difference
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/som/images/sphx_glr_plot_som_sample_02_002.png
          :alt: Node Grid w Feature #i, Feature 0, Feature 1, Feature 2, Feature 3, Feature 4, Feature 5, Feature 6, Feature 7, Feature 8, Feature 9, Feature 10, Feature 11, Feature 12, Feature 13, Feature 14, Feature 15
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    The dataset has 16 dimensions and 6 clusters.

     quantization error: 0.3418933481257356






|

.. code-block:: default
   :lineno-start: 14


    # Generic libraries
    import pandas as pd
    import numpy as np
    import matplotlib.pyplot as plt

    # Other
    from matplotlib import rcParams
    from minisom import MiniSom
    from sklearn.datasets import make_blobs
    from sklearn import preprocessing

    # Configuration
    rcParams.update({'figure.autolayout': True})


    # ----------------------
    # Create dataset
    # ----------------------
    SEED = 0
    N_CLUSTERS = 6
    N_SAMPLES = N_CLUSTERS * 100
    N_FEATURES = 16

    # Show information
    print("The dataset has {dim} dimensions and {clusters} clusters."
          .format(dim=N_FEATURES, clusters=N_CLUSTERS))

    # Create dataset
    x, y = make_blobs(n_samples=N_SAMPLES,
                      n_features=N_FEATURES,
                      centers=N_CLUSTERS,
                      cluster_std=3,
                      random_state=SEED)

    # Scale data
    scaler = preprocessing.MinMaxScaler()
    x = scaler.fit_transform(x)

    # ----------------------
    # Train SOM
    # ----------------------
    # Create SOM
    som = MiniSom(20, 20, x.shape[1],
        neighborhood_function='gaussian',
        sigma=1.5, learning_rate=.5,
        random_seed=SEED)

    # Train
    som.pca_weights_init(x)
    som.train_random(x, 1000, verbose=True)

    # Compute projections
    prj = np.array([som.winner(e) for e  in x])

    # Get weights
    W = som.get_weights()

    # -------------
    # Plot overall
    # -------------
    # Create figure
    f, ax = plt.subplots(1, 1, figsize=(6, 6))

    # Plot
    cs = plt.pcolor(som.distance_map().T)
    plt.scatter(prj[:, 0], prj[:, 1], c=y, cmap='rainbow')
    ax.set(title='Nodes Grid w Weights Difference',
           xticks=[], yticks=[], aspect='equal')

    # Add colorbar
    cbar = f.colorbar(cs, shrink=0.78)

    # -------------------
    # Plot feature planes
    # -------------------
    # Create figure
    f, axes = plt.subplots(4, 4, figsize=(8,8))
    axes = axes.flatten()

    # Plot feature planes
    for i, f in enumerate(range(N_FEATURES)):
        axes[i].pcolor(W[:, :, f].T)
        axes[i].set(title='Feature %s' % f, aspect='equal',
            yticks=[], xticks=[])

    # Set axes
    plt.suptitle("Node Grid w Feature #i")
    plt.tight_layout()

    # Show
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.578 seconds)


.. _sphx_glr_download__examples_som_plot_som_sample_02.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_som_sample_02.py <plot_som_sample_02.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_som_sample_02.ipynb <plot_som_sample_02.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
