
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/visualization/plot_mpl_categories_01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_visualization_plot_mpl_categories_01.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_visualization_plot_mpl_categories_01.py:


Categories (exhaustive)
=======================

This script is useful to understand the distribution
over the 2D projected space of the different categories.
The categories (severe, warning, mild, ...) can be
created by combining other existing features/outcomes
in the data. This script contains exhaustive, including
as much information as possible for each of the categories.

.. GENERATED FROM PYTHON SOURCE LINES 14-224



.. image:: /_examples/visualization/images/sphx_glr_plot_mpl_categories_01_001.png
    :alt: severe (4848), warning (6791), mild (5604)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Adding...                  severe | max
    Adding...                 warning | max
    Adding...                    mild | max

    Data:
                   dsource   age  weight    plt  haematocrit_percent  body_temperature  gender       date  shock  severe  warning   mild
    study_no                                                                                                                            
    01nva-003-2008   01nva  16.0    72.0    8.0        54.0000              37.0750        1.0 2020-07-17   True    True     True  False
    01nva-003-2009   01nva  17.0    44.0    8.0        47.3333              37.0000        0.0 2020-07-30   True    True     True  False
    01nva-003-2012   01nva  17.0    48.0    9.0        49.1500              37.1875        0.0 2020-08-15   True    True     True  False
    01nva-003-2024   01nva  16.0   114.0    9.0        49.1000              37.1167        1.0 2020-10-09   True    True     True  False
    01nva-003-2028   01nva  18.0    82.0   18.0        42.9714              37.1500        0.0 2020-11-07   True    True     True  False
    ...                ...   ...     ...    ...            ...                  ...        ...        ...    ...     ...      ...    ...
    md-994              md  13.0    53.0   88.0        42.0000              40.0000        0.0 2003-08-27  False    True    False   True
    md-995              md   9.0    27.5  132.0        37.8000              39.0000        0.0 2003-08-27  False    True    False   True
    md-996              md  10.0    33.0   75.0        43.0000              39.9000        0.0 2003-07-24  False    True     True  False
    md-998              md  13.0    44.0   94.0        41.5000              38.5000        1.0 2003-08-29  False    True     True  False
    md-999              md  15.0    49.0   56.0        40.5000              38.5000        0.0 2003-08-29  False    True     True  False

    [12863 rows x 12 columns]
    dsource                       object
    age                          float64
    weight                       float64
    plt                          float64
    haematocrit_percent          float64
    body_temperature             float64
    gender                       float64
    date                   datetime64...
    shock                         object
    severe                          bool
    warning                         bool
    mild                            bool
    dtype: object
    12863
    severe     4848
    mild       5604
    warning    6791
    dtype: int64

    Model:
    Autoencoder(
      (encoder): Sequential(
        (0): Linear(in_features=5, out_features=3, bias=True)
        (1): Sigmoid()
        (2): Linear(in_features=3, out_features=2, bias=True)
        (3): Sigmoid()
      )
      (decoder): Sequential(
        (0): Linear(in_features=2, out_features=3, bias=True)
        (1): Sigmoid()
        (2): Linear(in_features=3, out_features=5, bias=True)
        (3): Sigmoid()
      )
    )

    Encoded:
    [[0.1520529  0.74539393]
     [0.2646528  0.7333292 ]
     [0.23637003 0.7385248 ]
     ...
     [0.453338   0.620019  ]
     [0.28497958 0.5708288 ]
     [0.23240355 0.62076086]]

    Data:
                   dsource   age  weight    plt  haematocrit_percent  body_temperature  gender       date  shock  severe  warning   mild       x       y
    study_no                                                                                                                                            
    01nva-003-2008   01nva  16.0    72.0    8.0        54.0000              37.0750        1.0 2020-07-17   True    True     True  False  0.1521  0.7454
    01nva-003-2009   01nva  17.0    44.0    8.0        47.3333              37.0000        0.0 2020-07-30   True    True     True  False  0.2647  0.7333
    01nva-003-2012   01nva  17.0    48.0    9.0        49.1500              37.1875        0.0 2020-08-15   True    True     True  False  0.2364  0.7385
    01nva-003-2024   01nva  16.0   114.0    9.0        49.1000              37.1167        1.0 2020-10-09   True    True     True  False  0.0784  0.7186
    01nva-003-2028   01nva  18.0    82.0   18.0        42.9714              37.1500        0.0 2020-11-07   True    True     True  False  0.1081  0.6866
    ...                ...   ...     ...    ...            ...                  ...        ...        ...    ...     ...      ...    ...     ...     ...
    md-994              md  13.0    53.0   88.0        42.0000              40.0000        0.0 2003-08-27  False    True    False   True  0.2172  0.5767
    md-995              md   9.0    27.5  132.0        37.8000              39.0000        0.0 2003-08-27  False    True    False   True  0.4946  0.5147
    md-996              md  10.0    33.0   75.0        43.0000              39.9000        0.0 2003-07-24  False    True     True  False  0.4533  0.6200
    md-998              md  13.0    44.0   94.0        41.5000              38.5000        1.0 2003-08-29  False    True     True  False  0.2850  0.5708
    md-999              md  15.0    49.0   56.0        40.5000              38.5000        0.0 2003-08-29  False    True     True  False  0.2324  0.6208

    [12863 rows x 14 columns]






|

.. code-block:: default
   :lineno-start: 16



    # Library
    import pickle
    import pandas as pd
    import numpy as np
    import matplotlib as mpl

    # Specific
    from torch.utils.data import DataLoader
    from sklearn.preprocessing import MinMaxScaler

    # Specific
    from pkgname.core.AE.autoencoder import get_device, set_seed
    from pkgname.utils.data_loader import load_dengue, IQR_rule

    # Local (also configures mpl and pd)
    import _utils


    # ------------------------------
    # Constants
    # ------------------------------
    # Load constants
    features = _utils.features
    others = _utils.others
    mappings = _utils.mappings
    aggregation = _utils.aggregation
    cmaps = _utils.cmaps

    outcomes = [
        "severe",
        "warning",
        "mild",
    ]

    # Ensure all outcomes are in aggregation
    for c in outcomes:
        if c not in aggregation:
            print("Adding... %23s | max" % c)
            aggregation[c] = 'max'

    nrows, ncols = 1, 3


    # ------------------------------
    # Load data
    # ------------------------------
    # Load data
    data = _utils.load_data()

    # Liver abnormal
    data['liver_abnormal'] = \
        data.liver_acute | \
        data.liver_involved | \
        data.liver_failure | \
        data.liver_severe | \
        data.jaundice

    # Kidney abnormal
    data['kidney_abnormal'] = \
        data.skidney

    # Create features
    data['severe_leak'] = \
        data.ascites | \
        data.overload | \
        data.oedema_pulmonary | \
        data.respiratory_distress | \
        data.oedema | \
        data.pleural_effusion | \
        data.effusion

    # Bleeding
    data['severe_bleed'] = \
        data.bleeding_gi | \
        data.bleeding_urine # useless

    # Organ impairment
    data['severe_organ'] = \
        data.cns_abnormal | \
        data.neurology.astype(bool) | \
        data.liver_abnormal | \
        data.kidney_abnormal | \
        (data.ast.fillna(0) >= 1000) | \
        (data.alt.fillna(0) >= 1000)

    # Category: severe
    data['severe'] = \
        data.severe_leak | \
        data.severe_bleed | \
        data.severe_organ | \
        data.shock

    # Category: warning WHO
    data['warning'] = \
        data.abdominal_pain | \
        data.abdominal_tenderness | \
        data.vomiting | \
        data.ascites | \
        data.pleural_effusion | \
        data.bleeding_mucosal | \
        data.restlessness | \
        data.lethargy | \
        (data.liver_palpation_size.fillna(0) > 2)

    # Category: mild
    data['mild'] = ~(data.severe | data.warning)

    # Fill empty values (be careful!)
    for c in outcomes:
        data[c] = data[c].fillna(0)

    # Filter data (age, iqr, ...)
    data = data[data.age.between(0.0, 18.0)]
    data = data[data.plt < 50000] # extreme outlier

    # Filter outliers
    data = IQR_rule(data, [
        'plt',
        #'haematocrit_percent',
        #'body_temperature'
    ])

    # Rename
    # .. note: Done after convert_dtypes so that
    #          it remains 0 or 1, otherwise it will
    #          be transformed to boolean feature.
    #          (its ok too).
    data = data.replace(mappings)

    # Get worst state for patient
    data = data.groupby(by="study_no", dropna=False) \
        .agg(aggregation).dropna()

    # Show data
    print("\nData:")
    print(data)
    print(data.dtypes)
    print(data.index.nunique())
    print(data[outcomes].sum().sort_values())


    # ------------------------------
    # Load Model
    # ------------------------------
    # Load model
    model = _utils.load_model()

    # Show
    print("\nModel:")
    print(model)

    # ------------------------------
    # Projections
    # ------------------------------
    # .. note: The scaling method should have also been
    #          saved when training the model.
    # Features
    datap = data[features].copy(deep=True)

    # Scale first
    datap = MinMaxScaler().fit_transform(datap)

    # Encode
    encoded = model.encode_inputs( \
        DataLoader(datap, 16, shuffle=False))

    # Include in original dataset
    data[['x', 'y']] = encoded

    # Show
    print("\nEncoded:")
    print(encoded)
    print("\nData:")
    print(data)


    # ------------------------------
    # Visualization
    # ------------------------------
    # Libraries
    import matplotlib.pyplot as plt

    # Specific
    from _utils import kde_mpl_plot
    from _utils import kde_mpl_compute
    from _utils import kde_mpl

    # Figure with kdes
    f5, axes5 = plt.subplots(nrows, ncols,
        figsize=(15, 4), sharex=True, sharey=True)

    # Loop
    for i, c in enumerate(outcomes):
        # Select dataset
        aux = data[data[c] == 1]
        # Plot kde
        kde_mpl(aux.x, aux.y, ax=axes5.flat[i],
            contour=True, cmap=cmaps.get(c, 'Reds'),
            xlim=(data.x.min(), data.x.max()),
            ylim=(data.y.min(), data.y.max()))
        # Configure
        axes5.flat[i].set(aspect='equal',
            title='%s (%s)' % (c, aux.shape[0]))

    # Configure
    plt.tight_layout()

    # Show
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.809 seconds)


.. _sphx_glr_download__examples_visualization_plot_mpl_categories_01.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_mpl_categories_01.py <plot_mpl_categories_01.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_mpl_categories_01.ipynb <plot_mpl_categories_01.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
